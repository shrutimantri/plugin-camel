package io.kestra.plugin.camel.googlecalendar;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.is;
import static org.hamcrest.Matchers.notNullValue;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.condition.DisabledIf;

import com.google.api.services.calendar.model.Event.Creator;
import com.google.common.base.Strings;

import io.kestra.core.junit.annotations.KestraTest;
import io.kestra.core.runners.RunContext;
import io.kestra.core.runners.RunContextFactory;
import jakarta.inject.Inject;

@KestraTest
@DisabledIf(
    value = "canNotBeEnabled",
    disabledReason = "Disabled for CI/CD as requires secrets data, such as: clientId, clientSecret, refreshToken"
)
class InsertEventTest {
    @Inject
    private RunContextFactory runContextFactory;

    @Test
    void run() throws Exception {
        RunContext runContext = runContextFactory.of();

        InsertEvent task = InsertEvent.builder()
            .clientId(getClientId())
            .clientSecret(getClientSecret())
            .refreshToken(getRefreshToken())
            .summary("New Calendar Event")
            .description("This is a new calendar event generated by Kestra.")
            .creator(new Creator().setEmail("my_email@gmail.com"))
            .startDateTime("2024-12-01T10:00:00+05:30")
            .startTimeZone("Asia/Calcutta")
            .endDateTime("2024-12-01T11:00:00+05:30")
            .endTimeZone("Asia/Calcutta")
            .build();

        InsertEvent.Output runOutput = task.run(runContext);

        assertThat(runOutput.getEventId(), is(notNullValue()));
    }

    private static boolean canNotBeEnabled() {
        return Strings.isNullOrEmpty(getClientId()) ||
            Strings.isNullOrEmpty(getClientSecret()) ||
            Strings.isNullOrEmpty(getRefreshToken());
    }

    private static String getClientId() {
        return "";
    }

    private static String getClientSecret() {
        return "";
    }

    private static String getRefreshToken() {
        return "";
    }
}
